package com.digitalwallet.backend.controller;

import com.digitalwallet.backend.dto.LoginRequest;
import com.digitalwallet.backend.dto.RegisterRequest;
import com.digitalwallet.backend.dto.TokenResponse;
import com.digitalwallet.backend.service.AuthService;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import jakarta.validation.Valid;
import java.util.Map;

@RestController
@RequestMapping("/api/v1/auth")
public class AuthController {
  private final AuthService authService;

  public AuthController(AuthService authService) {
    this.authService = authService;
  }

  @PostMapping("/register")
  public ResponseEntity<?> register(@Valid @RequestBody RegisterRequest req) {
    try {
      authService.register(req.getFullName(), req.getEmail(), req.getPassword());
      return ResponseEntity.ok(Map.of("message","registered"));
    } catch (IllegalArgumentException ex) {
      // client error (e.g. email already exists, bad input)
      return ResponseEntity.badRequest().body(Map.of("message", ex.getMessage()));
    } catch (Exception ex) {
      // server error
      return ResponseEntity.internalServerError().body(Map.of("message", "Registration failed"));
    }
  }

  @PostMapping("/login")
  public ResponseEntity<?> login(@Valid @RequestBody LoginRequest req) {
    try {
      String token = authService.loginAndCreateToken(req.getEmail(), req.getPassword());
      return ResponseEntity.ok(new TokenResponse(token));
    } catch (IllegalArgumentException ex) {
      return ResponseEntity.status(401).body(Map.of("message", ex.getMessage()));
    } catch (Exception ex) {
      return ResponseEntity.internalServerError().body(Map.of("message", "Login failed"));
    }
  }
}
